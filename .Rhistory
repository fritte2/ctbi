library(ctbi)
help(ctbi)
help(seq)
library(ctbi)
ctbi
help(ctbi)
ctbi
help("ctbi")
library(data.table)
set.seed(1)
# example 1, airpassenger data
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
example1[sample(1:144,30),airp := NA]
example1[c(5,30,50,130),airp := c(-5,850,0,100)]
example1 <- example1[-(70:100),]
example1
bin.period <- '1 year' # aggregation performed every year
bin.side <- as.Date('2000-01-01') # side of a bin
bin.FUN <- 'sum' # calculate the number of passengers for each year
bin.max.f.NA <- 0.2 # maximum of 20% of missing values per bin to accept the bin
ylim <- c(0,Inf) # a negative number of passengers is impossible
list.main <- ctbi(example1,bin.period=bin.period,
bin.side=bin.side,bin.FUN=bin.FUN,
ylim=ylim,bin.max.f.NA=bin.max.f.NA)
data.input <- copy(example1)
if(length(data.input[1,]) == 2)
length(data.input[1,]) == 2
!is.numeric(data.input[[2]])
!is.integer(data.input[[2]])
library(ctbi)
library(ctbi)
help(ctbi)
library(ctbi)
help(hidd.median)
library(ctbi)
ctpli.ploy
ctbi.plot
hidd.median
hidd.mean
hidd.sum
library(devltools)
install.packages("devtools")
library(devltools)
library(devtools)
devtools::document()
devtools::check()
remove.packages(ctbi)
remove.packages('ctbi')
library(ctbi)
help(ctbi)
library(ctbi)
ctbi
help(ctbi)
devtools::document()
help(ctbi)
ctbi
devtools::check()
devtools::check()
devtools::check()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::check()
sessionInfo()
library(installR)
install.packages("installr")
library(installR)
library(installr)
updateR()
?R.home
R.ome
R.home
R.home()
R.home()
SessionInfo()
sessionInfo()
sessionInfo()
library(usethis)
usethis::use_readme_rmd()
help(ctbi)
??ctbi
set.seed(1)
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
library(data.table)
set.seed(1)
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
example1[sample(1:144,30),airp := NA]
example1[c(5,30,50,130),airp := c(-5,850,0,100)]
example1 <- example1[-(70:100),]
bin.period <- '1 year' # aggregation performed every year
bin.side <- as.Date('2000-01-01') # side of a bin
bin.FUN <- 'sum' # calculate the number of passengers for each year
bin.max.f.NA <- 0.2 # maximum of 20% of missing values per bin to accept the bin
ylim <- c(0,Inf) # a negative number of passengers is impossible
list.main <- ctbi(example1,bin.period=bin.period,
bin.side=bin.side,bin.FUN=bin.FUN,
ylim=ylim,bin.max.f.NA=bin.max.f.NA)
library(ctbi)
devtools::install_github("fritte2/ctbi")
library(ctbi)
data.table
example1 <- data.frame(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
bin.period <- '1 year' # aggregation performed every year
bin.side <- as.Date('2000-01-01') # side of a bin
bin.FUN <- 'sum' # calculate the number of passengers for each year
bin.max.f.NA <- 0.2 # maximum of 20% of missing values per bin to accept the bin
ylim <- c(0,Inf) # a negative number of passengers is impossible
list.main <- ctbi(example1,bin.period=bin.period,
bin.side=bin.side,bin.FUN=bin.FUN,
ylim=ylim,bin.max.f.NA=bin.max.f.NA)
list.main
example1
set.seed(1)
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
library(ctbi)
library(data.table)
set.seed(1)
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
example1[sample(1:144,30),airp := NA]
example1[c(5,30,50,130),airp := c(-5,850,0,100)]
example1 <- example1[-(70:100),]
bin.period <- '1 year' # aggregation performed every year
bin.side <- as.Date('2000-01-01') # side of a bin
bin.FUN <- 'sum' # calculate the number of passengers for each year
bin.max.f.NA <- 0.2 # maximum of 20% of missing values per bin to accept the bin
ylim <- c(0,Inf) # a negative number of passengers is impossible
list.main <- ctbi(example1,bin.period=bin.period,
bin.side=bin.side,bin.FUN=bin.FUN,
ylim=ylim,bin.max.f.NA=bin.max.f.NA)
data0.example1 <- list.main$data0 # cleaned raw dataset
data1.example1 <- list.main$data1 # aggregated dataset.
SCI.example1 <- list.main$SCI # this data set shows a moderate seasonality
mean.cycle.example1 <- list.main$mean.cycle
bin.size.example1 <- list.main$bin.size # 12 data points per bin on average (12 months per year)
ctbi.plot(list.main,show.n.bin=15)
ctbi.plot(list.main,show.n.bin=15)
library(ctbi)
library(data.table)
## basic example code
set.seed(1)
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
example1[sample(1:144,30),airp := NA]
example1[c(5,30,50,130),airp := c(-5,850,0,100)]
example1 <- example1[-(70:100),]
bin.period <- '1 year' # aggregation performed every year
bin.side <- as.Date('2000-01-01') # side of a bin
bin.FUN <- 'sum' # calculate the number of passengers for each year
bin.max.f.NA <- 0.2 # maximum of 20% of missing values per bin to accept the bin
ylim <- c(0,Inf) # a negative number of passengers is impossible
list.main <- ctbi(example1,bin.period=bin.period,
bin.side=bin.side,bin.FUN=bin.FUN,
ylim=ylim,bin.max.f.NA=bin.max.f.NA)
data0.example1 <- list.main$data0 # cleaned raw dataset
data1.example1 <- list.main$data1 # aggregated dataset.
SCI.example1 <- list.main$SCI # this data set shows a moderate seasonality
mean.cycle.example1 <- list.main$mean.cycle
bin.size.example1 <- list.main$bin.size # 12 data points per bin on average (12 months per year)
ctbi.plot(list.main,show.n.bin=15)
list.main
set.seed(1)
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
example1[sample(1:144,30),airp := NA]
example1[c(5,30,50,130),airp := c(-5,850,0,100)]
example1 <- example1[-(70:100),]
bin.period <- '1 year' # aggregation performed every year
bin.side <- as.Date('2000-01-01') # side of a bin
bin.FUN <- 'sum' # calculate the number of passengers for each year
bin.max.f.NA <- 0.3 # maximum of 20% of missing values per bin to accept the bin
ylim <- c(0,Inf) # a negative number of passengers is impossible
list.main <- ctbi(example1,bin.period=bin.period,
bin.side=bin.side,bin.FUN=bin.FUN,
ylim=ylim,bin.max.f.NA=bin.max.f.NA)
data0.example1 <- list.main$data0 # cleaned raw dataset
data1.example1 <- list.main$data1 # aggregated dataset.
SCI.example1 <- list.main$SCI # this data set shows a moderate seasonality
mean.cycle.example1 <- list.main$mean.cycle
bin.size.example1 <- list.main$bin.size # 12 data points per bin on average (12 months per year)
ctbi.plot(list.main,show.n.bin=15)
example1 <- data.table(month = seq(from=as.Date('1949-01-01'),to=as.Date('1960-12-01'),
by='1 month'),airp = as.numeric(AirPassengers))
example1
bin.period <- '1 year' # aggregation performed every year
bin.side <- as.Date('2000-01-01') # side of a bin
bin.FUN <- 'sum' # calculate the number of passengers for each year
bin.max.f.NA <- 0.2 # maximum of 20% of missing values per bin to accept the bin
ylim <- c(0,Inf) # a negative number of passengers is impossible
list.main <- ctbi(example1,bin.period=bin.period,
bin.side=bin.side,bin.FUN=bin.FUN,
ylim=ylim,bin.max.f.NA=bin.max.f.NA)
data0.example1 <- list.main$data0 # cleaned raw dataset
data1.example1 <- list.main$data1 # aggregated dataset.
SCI.example1 <- list.main$SCI # this data set shows a moderate seasonality
mean.cycle.example1 <- list.main$mean.cycle
bin.size.example1 <- list.main$bin.size # 12 data points per bin on average (12 months per year)
ctbi.plot(list.main,show.n.bin=15)
help(ctbi)
plot(mean.cycle.example1[,'generic.time.bin1'],
mean.cycle.example1[,'mean'],type='l',ylim=c(-80,80))
devtools::install_github("fritte2/ctbi")
library(ctbi)
help(ctbi)
help(seq)
devtools::install_github("fritte2/ctbi")
library(ctbi)
help(ctbi)
remove.packages(ctbi)
remove.packages('ctbi')
library(ctbi)
help(removes.package)
help(removes.packages)
help(remove.packages)
library(ctbi)
help(ctbi)
devtools::document
devtools::document()
devtools::build()
devtools::check_win_devel()
devtools::check_mac_release()
library(rhub)
rhub::check()
package.remove(ctbi)
remove(ctbi)
remove.packages(ctbi)
devtools::install_github(fritte2/ctbi)
devtools::install_github('fritte2/ctbi')
library(ctbi)
help(ctbi)
help(ctbi)
devtools::check_win_release()
devtools::check_mac_release()
rhub::check()
cran_summary()
library(rhub)
library(rhub)
cran_summary()
devtools::check()
